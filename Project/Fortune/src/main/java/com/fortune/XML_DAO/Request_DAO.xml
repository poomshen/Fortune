<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fortune.request_DAO.ProDao">


	<select id="requestCount" resultType="Integer">
		SELECT COUNT(*) CNT
		FROM collabo_req
		WHERE ${param1} like '%${param2}%'
	</select>

	<select id="getRequest" resultType="com.fortune.Table_DTO.Request_DTO">
		SELECT * FROM (SELECT ROWNUM NUM, N.* FROM
		( SELECT * FROM collabo_req WHERE (${param2}
		LIKE '%${param3}%' AND collabo_req_state LIKE '%${param4}%') ORDER BY collabo_req_date DESC ) N )
		WHERE NUM BETWEEN 1 + (${param1} - 1) * 500 AND 500 + (${param1} - 1) * 500
	</select>
<!-- SELECT * FROM (SELECT ROWNUM NUM, N.* FROM
		( SELECT * FROM collabo_req WHERE( user_ID
		LIKE '%sung@gmail.com%' and collabo_req_state like '%%') ORDER BY collabo_req_date DESC ) N )
		WHERE NUM BETWEEN 1 + (1 - 1) * 50 AND 50 + (1 - 1) * 50; -->


	<!-- 요청번호 수정해야 합니다. ! -->
	<insert id="insert">
		<selectKey order="BEFORE" keyProperty="collabo_req_index"
			resultType="String">
			SELECT MAX(TO_NUMBER(collabo_req_index))+1 FROM collabo_req
		</selectKey>
		<choose>
			<when test="collabo_req_index == null">
				Insert into collabo_req(collabo_req_index,collabo_req_no,user_ID,
				collabo_req_title,
				collabo_req_text, collabo_req_date, collabo_req_ID, collabo_req_state)
				VALUES(1,1, #{user_ID}, #{collabo_req_title}, #{collabo_req_text}, SYSDATE
				,#{collabo_req_ID}, #{collabo_req_state})
			</when>

			<otherwise>
				Insert into collabo_req(collabo_req_index,collabo_req_no,user_ID,
				collabo_req_title,
				collabo_req_text, collabo_req_date, collabo_req_ID, collabo_req_state)
				VALUES(#{collabo_req_index},1, #{user_ID}, #{collabo_req_title},
				#{collabo_req_text}, SYSDATE ,#{collabo_req_ID},
				#{collabo_req_state})
			</otherwise>
		</choose>
	</insert>



	<delete id="delete">

		DELETE collabo_req WHERE collabo_req_index=#{collabo_req_index}

	</delete>


	<update id="accept">
		UPDATE collabo_req SET
		collabo_req_state='수락'
		WHERE collabo_req_index=#{collabo_req_index}
	</update>

	<update id="refuse">
		UPDATE collabo_req SET
		collabo_req_state='거절'
		WHERE collabo_req_index=#{collabo_req_index}

	</update>


	<update id="update" parameterType="com.fortune.Table_DTO.Request_DTO">

		UPDATE COLLABO_REQ SET
		collabo_req_title=#{collabo_req_title},
		collabo_req_text=#{collabo_req_text}
		WHERE collabo_req_index=#{collabo_req_index}

	</update>


	
	<select id="getProDto" resultType="com.fortune.Table_DTO.Request_DTO">
		<!-- public Notice getNotice(String seq) parameter 1개 생략 : 사용 parameter 
			이름 :seq param1 은 안되요 (x) -->
		SELECT * FROM collabo_req WHERE collabo_req_index=
		#{collabo_req_index}
	</select>
	
	<!-- 대기,수락 , 거절 을 하였을 때 띄어주는 것이다. -->
	<select id="kindState" resultType="com.fortune.Table_DTO.Request_DTO">
		SELECT * FROM collabo_req WHERE collabo_req_state= #{collabo_req_state}
	</select>





	<select id="detailResponse" resultType="com.fortune.Table_DTO.Request_DTO">

		SELECT * FROM collabo_req WHERE collabo_req_index= #{collabo_req_index}
	</select>

	<insert id="insertResponse">


		<!-- <selectKey order="BEFORE" keyProperty="collabo_no" resultType="String"> 
			SELECT MAX(TO_NUMBER(collabo_no))+1 FROM collabo </selectKey> -->
		<choose>
			<when test="collabo_no == null">
				Insert into collabo(collabo_no,collabo_req_index,collabo_req_no,user_ID,
				collabo_start, collabo_end, collabo_state, collabo_req_ID)
				VALUES(collabo_seq.nextval,#{collabo_req_index},#{collabo_req_no},
				null, #{collabo_start}, #{collabo_end}, #{collabo_state},
				#{collabo_req_ID})
			</when>

			<otherwise>
				Insert into collabo(collabo_no,collabo_req_index,collabo_req_no,user_ID,
				collabo_start, collabo_end, collabo_state, collabo_req_ID)
				VALUES(collabo_seq.nextval,#{collabo_req_index},#{collabo_req_no},
				null, #{collabo_start}, #{collabo_end}, #{collabo_state} ,
				#{collabo_req_ID})
			</otherwise>
		</choose>

	</insert>

	<select id="listResponse" resultType="com.fortune.Table_DTO.With_DTO">
		SELECT * FROM (SELECT ROWNUM NUM, N.* FROM
		( SELECT * FROM collabo WHERE ${param2}
		LIKE '%${param3}%' ORDER BY collabo_start DESC ) N )
		WHERE NUM BETWEEN 1 + (${param1} - 1) * 50 AND 50 + (${param1} - 1) * 50
	</select>


	<!-- 담당자 보여주는 태그 -->
	<select id="managerDto" resultType="com.fortune.Table_DTO.With_DTO">

		SELECT * FROM collabo WHERE collabo_req_index= #{collabo_req_index}
	</select>


	<!-- 담당자 선택 -->
	<update id="updatemanager">
		UPDATE collabo SET
		user_ID=#{user_ID}
		WHERE collabo_req_index=#{collabo_req_index}

	</update>

	<select id="listEffect" resultType="com.fortune.Table_DTO.Join_DTO">

		select user_ID , user_password,user_name,user_gender,user_date,user_phone,user_join,position_No,
    team_No,dept_No,role_no from users where ROLE_NO = 2

	</select>

	<select id="listManager" resultType="com.fortune.Table_DTO.Join_DTO">

		select user_ID , user_password,user_name,user_gender,user_date,user_phone,user_join,position_No,
    team_No,dept_No,role_no from users where ROLE_NO = 3

	</select>



</mapper>