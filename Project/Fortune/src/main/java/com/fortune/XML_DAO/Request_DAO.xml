<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fortune.request_DAO.ProDao">


	<select id="requestCount" resultType="Integer">
		SELECT COUNT(*) CNT
		FROM collabo_req
		WHERE (${param1} like '%${param2}%'AND collabo_req_state LIKE '%${param3}%' AND ${param4} LIKE '%${param5}%')
	</select>

	<select id="getRequest" resultType="com.fortune.Table_DTO.Request_DTO">
		SELECT * FROM (SELECT ROWNUM NUM, N.* FROM
		( SELECT * FROM collabo_req WHERE (${param2}
		LIKE '%${param3}%' AND ${param5} LIKE '%${param6}%' AND collabo_req_state LIKE '%${param4}%') ORDER BY collabo_req_date DESC ) N )
		WHERE NUM BETWEEN 1 + (${param1} - 1) * 6 AND 6 + (${param1} - 1) * 6
	</select>
<!-- SELECT * FROM (SELECT ROWNUM NUM, N.* FROM
		( SELECT * FROM collabo_req WHERE( user_ID
		LIKE '%sung@gmail.com%' and collabo_req_state like '%%') ORDER BY collabo_req_date DESC ) N )
		WHERE NUM BETWEEN 1 + (1 - 1) * 50 AND 50 + (1 - 1) * 50; -->


	<!-- 요청번호 수정해야 합니다. ! -->
	<insert id="insert">
		<selectKey order="BEFORE" keyProperty="collabo_req_index"
			resultType="String">
			SELECT MAX(TO_NUMBER(collabo_req_index))+1 FROM collabo_req
		</selectKey>
		<choose>
			<when test="collabo_req_index == null">
				Insert into collabo_req(collabo_req_index,collabo_req_no,user_ID,
				collabo_req_title,
				collabo_req_text, collabo_req_date, collabo_req_ID, collabo_req_state , COLLABO_REQ_FILESRC)
				VALUES(1,#{collabo_req_no}, #{user_ID}, #{collabo_req_title}, #{collabo_req_text}, TO_CHAR(SYSDATE, 'yyyy-mm-dd hh:mm:ss')
				,#{collabo_req_ID}, #{collabo_req_state}, #{collabo_req_filesrc})
			</when>

			<otherwise>
				Insert into collabo_req(collabo_req_index,collabo_req_no,user_ID,
				collabo_req_title,
				collabo_req_text, collabo_req_date, collabo_req_ID, collabo_req_state , COLLABO_REQ_FILESRC)
				VALUES(#{collabo_req_index},#{collabo_req_no}, #{user_ID}, #{collabo_req_title},
				#{collabo_req_text}, TO_CHAR(SYSDATE, 'yyyy-mm-dd hh:mm:ss') ,#{collabo_req_ID},#{collabo_req_state},#{collabo_req_filesrc})
			</otherwise>
		</choose>
	</insert>



	<delete id="delete">

		DELETE collabo_req WHERE collabo_req_index=#{collabo_req_index}

	</delete>


	<update id="accept">
		UPDATE collabo_req SET
		collabo_req_state='수락'
		WHERE collabo_req_index=#{collabo_req_index}
	</update>

	<update id="refuse" parameterType="com.fortune.Table_DTO.Request_DTO">
		UPDATE collabo_req SET
		collabo_req_state='거절',
		collabo_req_text=#{param2}
		WHERE collabo_req_index=#{param1}

	</update>

	

	<update id="update" parameterType="com.fortune.Table_DTO.Request_DTO">

		UPDATE COLLABO_REQ SET
		collabo_req_title=#{collabo_req_title},
		collabo_req_filesrc=#{collabo_req_filesrc},
		collabo_req_text=#{collabo_req_text}
		WHERE collabo_req_index=#{collabo_req_index}

	</update>


	
	<select id="getProDto" resultType="com.fortune.Table_DTO.Request_DTO">
		<!-- public Notice getNotice(String seq) parameter 1개 생략 : 사용 parameter 
			이름 :seq param1 은 안되요 (x) -->
		SELECT * FROM collabo_req WHERE collabo_req_index=
		#{collabo_req_index}
	</select>
	
	<!-- 대기,수락 , 거절 을 하였을 때 띄어주는 것이다. -->
	<select id="kindState" resultType="com.fortune.Table_DTO.Request_DTO">
		SELECT * FROM collabo_req WHERE collabo_req_state= #{collabo_req_state}
	</select>





	<select id="detailResponse" resultType="com.fortune.Table_DTO.Request_DTO">

		SELECT * FROM collabo_req WHERE collabo_req_index= #{collabo_req_index}
	</select>

	<insert id="insertResponse">


		<!-- <selectKey order="BEFORE" keyProperty="collabo_no" resultType="String"> 
			SELECT MAX(TO_NUMBER(collabo_no))+1 FROM collabo </selectKey> -->
		<choose>
			<when test="collabo_no == null">
				Insert into collabo(collabo_no,collabo_req_index,collabo_req_no,user_ID,
				collabo_start, collabo_end, collabo_state, collabo_req_ID,collabo_sal)
				VALUES(collabo_seq.nextval,#{collabo_req_index},#{collabo_req_no},
				#{user_ID}, #{collabo_start}, #{collabo_end}, #{collabo_state},
				#{collabo_req_ID},#{collabo_sal})
			</when>

			<otherwise>
				Insert into collabo(collabo_no,collabo_req_index,collabo_req_no,user_ID,
				collabo_start, collabo_end, collabo_state, collabo_req_ID,collabo_sal)
				VALUES(collabo_seq.nextval,#{collabo_req_index},#{collabo_req_no},
				#{user_ID}, #{collabo_start}, #{collabo_end}, #{collabo_state} ,
				#{collabo_req_ID},#{collabo_sal})
			</otherwise>
		</choose>

	</insert>

	<select id="listResponse" resultType="com.fortune.Table_DTO.With_DTO">
		select COLLABO_REQ_TITLE, NUM,g.collabo_no collabo_no ,g.collabo_req_index collabo_req_index,g.collabo_req_no collabo_req_no
     ,g.user_id user_id,
     g.collabo_start collabo_start,g.collabo_end 
     collabo_end,g.collabo_state collabo_state,
     g.collabo_req_id collabo_req_id ,g.collabo_sal collabo_sal from (SELECT * FROM (SELECT ROWNUM NUM, N.* FROM
		( SELECT * FROM collabo WHERE ${param2}
		LIKE '%${param3}%' ORDER BY collabo_no DESC ) N )
		WHERE NUM BETWEEN (${param1}+1)  AND (4+${param1}) )G join 
		collabo_req r on g.collabo_req_index = r.COLLABO_REQ_INDEX ORDER by NUM
	</select>
	
	<!--  헙업 팀원들이 헙업 리스트 보기  -->
	<select id="listResponse2" resultType="com.fortune.Table_DTO.With_DTO">
		select COLLABO_REQ_TITLE, NUM,g.collabo_no collabo_no ,g.collabo_req_index collabo_req_index,g.collabo_req_no collabo_req_no
     ,g.user_id user_id,
     g.collabo_start collabo_start,g.collabo_end 
     collabo_end,g.collabo_state collabo_state,
     g.collabo_req_id collabo_req_id ,g.collabo_sal collabo_sal from(SELECT * FROM (SELECT ROWNUM NUM, N.* FROM
		( SELECT * FROM collabo WHERE ${param2}
		in 
		<foreach  item="querys"  collection="param3" open="(" separator="," close=")">
			#{querys}
		</foreach>
		 ORDER BY collabo_no DESC ) N )
		WHERE NUM BETWEEN (${param1}+1)  AND (4+${param1}) )G join 
		collabo_req r on g.collabo_req_index = r.COLLABO_REQ_INDEX  ORDER by NUM
	</select>


	<!--만든 목적: 담당자 선택해주려면 보여주어야 하는데 그것을 기반으로 만들었습니다.
		날짜 일자:2016-11-22 
	-->
	<select id="managerDto" resultType="com.fortune.Table_DTO.With_DTO">

		SELECT * FROM collabo WHERE collabo_req_index= #{collabo_req_index}
	</select>


	<!--만든 목적: 담당자 선택을해야하는데 데이터가 필요하였다.
		날짜 일자:2016-11-23 
	 -->
	<update id="updatemanager">
		UPDATE collabo SET
		user_ID=#{user_ID} ,collabo_state='진행중'
		WHERE collabo_req_index=#{collabo_req_index}

	</update>
	<!-- 만든 목적:부장 전용이라는 데이터를 뽑는데 사용되는 데이터 입니다..
	        날짜 일자:2016-11-23 
	-->
	<select id="listEffect" parameterType="String" resultType="com.fortune.request_DTO.Passion_DTO">

	 select u.user_ID , u.user_password,u.user_name,u.user_gender,u.user_date,u.user_phone,u.user_join,u.position_No,
    u.team_No,u.dept_No,u.role_no ,de.DEPT_NO,de.DEPT_NAME from users u join dept de on u.DEPT_NO = de.DEPT_NO where ROLE_NO = 2

	</select>

	
	<!-- 만든 목적: 팀장 전용이라는 데이터를 뽑는데 사용되는 데이터 입니다..
		 날짜 일자: 2016-11-23 
	-->
	<select id="listManager" resultType="com.fortune.Table_DTO.Join_DTO">

		select user_ID , user_password,user_name,user_gender,user_date,user_phone,user_join,position_No,
    team_No,dept_No,role_no from users where ROLE_NO = 3 and dept_no = #{dept_no}

	</select>
	
	<!-- 만든 목적: 대기에서 진행중으로 바꿔주는 데이터 입니다. 
		 날짜 일자: 2016-11-25
	 -->
	 
	<!-- <update id="manager">
		UPDATE collabo SET
		collabo_state='진행중'
		WHERE collabo_req_index=#{collabo_req_index}
	</update> -->

	<!--만든 목적: 담당자가 정해지면 참가자를 지정할수 있어야 하기에 만들었습니다.
		날짜 일자: 2016-11-25 
	 -->
	
	
	<select id="selectCollaboList" parameterType="String" resultType="com.fortune.function_DTO.Select_Collabo_DTO">
		select Col.Collabo_Req_Title,collabo_no from Collabo_Req col join (Select * From
		(Select collabo_no,team_no,collabo_req_index From Users U Join (Select * From Collabo) C On U.User_Id = C.User_Id) J
		Join
		(Select Team_No,Dept_No From Users Where User_Id = #{user_id}) Ids On J.Team_No = Ids.Team_No ) Lst 
		on col.collabo_req_index = lst.collabo_req_index
	</select>
	
	<select id="selectCollaboList2" parameterType="String" resultType="com.fortune.function_DTO.Select_Collabo_DTO">
		select Col.Collabo_Req_Title,collabo_no from  Collabo_Req col join (Select collabo_no,team_no,collabo_req_index From 
		(select * from Users where Users.DEPT_NO = #{param1} and Users.ROLE_NO = 2) U Join 
		(Select * From Collabo) C On U.User_Id = C.collabo_req_id)  Lst  on col.collabo_req_index = lst.collabo_req_index
	</select>

	<!-- 작성자 : 이성준  날짜: 16-12-01 목적: 팀원들의 팀장 보기 -->
	<select id="selectTeamMGR" parameterType="Integer"  resultType="String">
		Select distinct c.user_Id From Users U Join (Select * From Collabo) C On U.User_Id = C.User_Id where team_no = #{param1}	
	</select>

</mapper>