<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mappier.dtd">
<mapper namespace="com.fortune.fullcalendar_DAO.IFullCalendar">



<!-- 일정의 참가한 팀원 가져오기 위해 팀목록 불러오는 쿼리  -->
<select id="selectTeam_id" resultType="com.fortune.function_DTO.Team_Users_DTO">
	select u.user_id, u.user_name from users u join team t
	on u.team_no = t.team_no
	where u.team_no = (select team_no from users where user_id = #{user_id})
</select>




<!-- 일정(일반업무)등록 -1 --><!-- schedule 테이블 insert -->
<insert id="insertSchedule">
INSERT INTO schedule(SCHEDULE_NO, COLLABO_NO, SCHEDULE_START, SCHEDULE_END)
    VALUES((select nvl(max(schedule_no)+1,1) from schedule), #{collabo_no}, #{schedule_start}, #{schedule_end})
</insert>
<!-- 일정(일반업무)등록 -2 --><!-- work 테이블 insert -->
<insert id="insertWork">
INSERT INTO work(SCHEDULE_NO, WORK_TITLE, WORK_TEXT)
    VALUES((select max(schedule_no) from schedule), #{work_title}, #{work_text})
</insert>
<!-- 일정(일반업무)등록-3 // Work_users insert작업 -->
<insert id="insertWork_Users">
insert into work_users(user_id, schedule_no) values(#{user_id}, #{schedule_no})
</insert>
<!-- 일정(일반업무)등록-4 // 등록 전 schedule_no select작업 -->
<select id="selectScheduleno" resultType="com.fortune.Table_DTO.Schedule_DTO">
	select nvl(max(schedule_no)+1,1) as"schedule_no" from schedule
</select>


<!-- 일정(회의 업무)등록 -1 --><!-- schedule 테이블 insert -->
<insert id="insertSchedule2">
INSERT INTO schedule(SCHEDULE_NO, COLLABO_NO, SCHEDULE_START, SCHEDULE_END)
    VALUES((select nvl(max(schedule_no)+1,1) from schedule), #{collabo_no}, #{schedule_start}, #{schedule_end})
</insert>
<!-- 일정(회의 업무)등록 -2 --><!-- meeting 테이블 insert -->
<insert id="insertMeeting">
	insert into meeting(SCHEDULE_NO, MEETING_TITLE, MEETING_TEXT, MEETING_PLACE_NO)
	VALUES((select max(schedule_no) from schedule), #{meeting_title}, #{meeting_text}, #{meeting_place_no})
</insert>
<!-- 일정(회의 업무)등록-4 // Meet_users insert작업 -->
<insert id="insertMeet_users">
	insert into meet_users(user_id, schedule_no) values(#{user_id}, #{schedule_no})
</insert>




<!-- 모든 일정(일반업무) select -1 -->
<select id="selectSWList" resultType="com.fortune.function_DTO.Schedule_Work_Meeting_DTO">
	SELECT S.SCHEDULE_NO, SCHEDULE_START, SCHEDULE_END, WORK_TITLE AS "WM_TITLE", WORK_TEXT AS "WM_TEXT", WORK_PROGRESS as "progress_or_place" FROM 
	SCHEDULE S JOIN WORK W 
	ON S.SCHEDULE_NO = W.SCHEDULE_NO 
	WHERE S.COLLABO_NO = #{collabo_no}
	ORDER BY SCHEDULE_START desc
</select>
<!-- 모든 일정(회의업무) select -1.1 -->
<select id="selectSMList" resultType="com.fortune.function_DTO.Schedule_Work_Meeting_DTO">
	SELECT S.SCHEDULE_NO, SCHEDULE_START, SCHEDULE_END, meeting_title AS "WM_TITLE", meeting_title AS "WM_TEXT", meeting_place_no as "progress_or_place" FROM 
	SCHEDULE S JOIN meeting m 
	ON S.SCHEDULE_NO = m.SCHEDULE_NO 
	WHERE S.COLLABO_NO = #{collabo_no}
	ORDER BY SCHEDULE_START desc
</select>
<!-- 일반 일정마다 참가자 select -2 -->
<select id="selectWUList" resultType="com.fortune.Table_DTO.Work_Users_DTO">
	select u.user_name as "user_id", wu.schedule_no from
	work_users wu join work w
	on wu.SCHEDULE_NO = w.SCHEDULE_NO
	join schedule s
	on w.schedule_no = s.schedule_no
	join users u
  	on wu.user_id = u.user_id
	where s.collabo_no = #{param1} and schedule_start like #{param2}||'%'
</select>




<!-- 모든 일정(일반업무  + 회의업무) select -1 -->
<select id="selectSWMList" resultType="com.fortune.function_DTO.Schedule_Work_Meeting_DTO">
	select s.schedule_no, s.schedule_start, s.schedule_end, w.work_title as "wm_title", w.work_text as "wm_text", w.work_progress as "progress_or_place" from work w join schedule s
	on w.SCHEDULE_NO = s.schedule_no join
	collabo c on s.collabo_no = c.collabo_no
	where S.COLLABO_NO = #{param1} and schedule_start like #{param2}||'%'
	union
	select s.schedule_no, s.schedule_start, s.schedule_end, m.meeting_title as "title", m.meeting_text, m.MEETING_PLACE_NO from meeting m join schedule s
	on m.schedule_no = s.schedule_no join
	collabo c on s.collabo_no = c.collabo_no
	where s.collabo_no = #{param1} and schedule_start like #{param2}||'%'
	order by schedule_start desc
</select>

<!-- 모든 일정(일반업무  + 회의업무) select -1.1 -->
<select id="selectAllSWMList" resultType="com.fortune.function_DTO.Schedule_Work_Meeting_DTO">
	select s.schedule_no, s.schedule_start, s.schedule_end, w.work_title as "wm_title", w.work_progress as "progress_or_place" from work w join schedule s
	on w.SCHEDULE_NO = s.schedule_no join
	collabo c on s.collabo_no = c.collabo_no
	where S.COLLABO_NO = #{collabo_no}
	union
	select s.schedule_no, s.schedule_start, s.schedule_end, m.meeting_title as "title", m.MEETING_PLACE_NO from meeting m join schedule s
	on m.schedule_no = s.schedule_no join
	collabo c on s.collabo_no = c.collabo_no
	where s.collabo_no = #{collabo_no}
	order by schedule_start desc
</select>

<!-- 내 모든 일정(일반업무  + 회의업무) select -1.2 -->
<select id="selectMySWMList" resultType="com.fortune.function_DTO.Schedule_Work_Meeting_DTO">
	select s.schedule_no, s.schedule_start, s.schedule_end, w.work_title as "wm_title", w.work_text as "wm_text", w.work_progress as "progress_or_place", wu.USER_ID from work w join schedule s
	on w.SCHEDULE_NO = s.schedule_no join
	collabo c on s.collabo_no = c.collabo_no join
	work_users wu on s.schedule_no = wu.schedule_no
	where S.COLLABO_NO = #{param1} and wu.user_id = #{param2}
	union
	select s.schedule_no, s.schedule_start, s.schedule_end, m.meeting_title as "title", m.meeting_text, m.MEETING_PLACE_NO, mu.USER_ID from meeting m join schedule s
	on m.schedule_no = s.schedule_no join
	collabo c on s.collabo_no = c.collabo_no join
	meet_users mu on s.schedule_no = mu.schedule_no
	where s.collabo_no = #{param1} and mu.user_id = #{param2}
	order by schedule_start desc
</select>



<!-- 회의업무 마다 참가자 select -1 -->
<select id="selectMUList" resultType="com.fortune.Table_DTO.Meet_Users_DTO">
	select u.user_name as "user_id", mu.schedule_no from
	meet_users mu join meeting m
	on mu.SCHEDULE_NO = m.SCHEDULE_NO
	join schedule s
	on m.schedule_no = s.schedule_no
	join users u
  	on mu.user_id = u.user_id
	where s.collabo_no = #{param1} and schedule_start like #{param2}||'%'
</select>




<!-- 선택한 일정 select -->
<select id="selectClick" resultType="com.fortune.function_DTO.Schedule_Work_Meeting_DTO">
	select s.schedule_no, s.schedule_start, s.schedule_end, w.work_title as "wm_title", w.work_text as "wm_text", w.work_progress as "progress_or_place" from work w join schedule s
	on w.SCHEDULE_NO = s.schedule_no join
	collabo c on s.collabo_no = c.collabo_no
	where S.COLLABO_NO = #{param1} AND S.SCHEDULE_NO = #{param2}
	union
	select s.schedule_no, s.schedule_start, s.schedule_end, m.meeting_title as "title", m.meeting_text, m.MEETING_PLACE_NO from meeting m join schedule s
	on m.schedule_no = s.schedule_no join
	collabo c on s.collabo_no = c.collabo_no
	where s.collabo_no = #{param1} AND S.SCHEDULE_NO = #{param2}
</select>
<!-- 선택한 일정 select -2 -->
<select id="selectClick_users" resultType="String">
	select u.user_name as "user_id" from work_users wu join
	users u on wu.user_id = u.user_id
	where schedule_no = #{schedule_no}
</select>
<!-- 선택한 일정 select -3 -->
<select id="selectClick_users2" resultType="String">
	select u.user_name as "user_id" from meet_users mu join
	users u on mu.user_id = u.user_id
	where schedule_no = #{schedule_no}
</select>




<!-- 업무일정 delete 작업 -1 -->
<delete id="deleteWork_Users">
	delete from work_users where schedule_no =#{id}
</delete>
<!-- 업무일정 delete 작업 -2 -->
<delete id="deleteWork_Comment">
	delete from work_comment where schedule_no =#{id}
</delete>
<!-- 업무일정 delete 작업 -3 -->
<delete id="deleteWork">
	delete from work where schedule_no = #{id}
</delete>
<!-- 업무일정 delete 작업 -4 -->
<delete id="deleteSchedule">
	delete from schedule where schedule_no = #{id}
</delete>


<!-- 회의일정 delete 작업 -1 -->
<delete id="deleteMeet_Users">
	delete from MEET_USERS where schedule_no = #{id}
</delete>
<!-- 회의일정 delete 작업-2 -->
<delete id="deleteMeeting">
	delete from MEETING where schedule_no = #{id}
</delete>
<!-- 회의일정 delete 작업-3-->
<!-- 업무일정 삭제의 deleteSchedule 함수와 동일// 생략함 -->



<!-- 일반일정 update -->
<update id="updateWork">
	UPDATE WORK SET WORK_TITLE = #{work_title}, WORK_TEXT = #{work_text}
	WHERE SCHEDULE_NO = #{schedule_no}
</update>
<!-- 회의일정 update -->
<update id="updateMeeting">
	UPDATE MEETING SET MEETING_TITLE = #{meeting_title}, MEETING_TEXT = #{meeting_text}, MEETING_PLACE_NO = #{meeting_place_no}
	WHERE SCHEDULE_NO = #{schedule_no}
</update>
<!-- progress update -->
<update id="updateProgress">
	UPDATE WORK SET WORK_PROGRESS = #{param2}
	WHERE SCHEDULE_NO = #{param1}
</update>




<!-- 일정 dragupdate -->
<update id="updateSchedule">
	UPDATE schedule SET schedule_start = #{schedule_start}, schedule_end = #{schedule_end}
	WHERE SCHEDULE_NO = #{schedule_no}
</update>




<!-- 일정 상세보기의 comment select하기 -->
<select id="selectComment" resultType="com.fortune.Table_DTO.Work_Comment_DTO">
	select * from work_comment where schedule_no = #{id} order by work_comment_date desc
</select>




<!-- comment insert하기 -1 -->
<insert id="insertComment">
	insert into work_comment(work_comment_no , user_id , work_comment_text , work_comment_date , schedule_no)
	values((select nvl(max(work_comment_no +1),1) from work_comment), #{user_id}, #{work_comment_text}, sysdate, #{schedule_no})
</insert>
<!-- comment insert하기 -2 (insert 후 1건 select) -->
<select id="selectComment1" resultType="com.fortune.Table_DTO.Work_Comment_DTO">
	select * from work_comment where work_comment_no = (select max(work_comment_no) from work_comment)
</select>




<!-- comment delete하기 -1 -->
<delete id="deleteComment">
	delete from work_comment where work_comment_no = #{work_comment_no}
</delete>



<!-- 예약된 회의실 정보 select하기 -->
<select id="select_place" resultType="String">
	select m.meeting_place_no from meeting m join meeting_place mp
	on m.MEETING_PLACE_NO = mp.MEETING_PLACE_NO join schedule s
	on m.SCHEDULE_NO = s.schedule_no
	where s.schedule_start = #{schedule_start}
</select>


</mapper>