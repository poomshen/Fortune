<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mappier.dtd">
<mapper namespace="com.fortune.fullcalendar_DAO.IFullCalendar">



<!-- 일정의 참가한 팀원 가져오기 위해 팀목록 불러오는 쿼리  -->
<select id="selectTeam_id" resultType="String">
	select u.user_id, u.team_no from users u join team t
	on u.team_no = t.team_no
	where u.team_no = (select team_no from users where user_id = #{user_id})
</select>




<!-- 일정(일반업무)등록 -1 -->
<insert id="insertSchedule">
<!-- schedule 테이블 insert -->
INSERT INTO schedule(SCHEDULE_NO, COLLABO_NO, SCHEDULE_START, SCHEDULE_END)
    VALUES((select nvl(max(schedule_no)+1,1) from schedule), #{collabo_no}, #{schedule_start}, #{schedule_end})
</insert>
<!-- 일정(일반업무)등록 -2 -->
<insert id="insertWork">
<!-- work 테이블 insert -->
INSERT INTO work(SCHEDULE_NO, WORK_TITLE, WORK_TEXT)
    VALUES((select max(schedule_no) from schedule), #{work_title}, #{work_text})
</insert>
<!-- 일정(일반업무)등록-3 // Work_users insert작업 -->
<insert id="insertWork_Users">
insert into work_users(user_id, schedule_no) values(#{user_id}, #{schedule_no})
</insert>
<!-- 일정(일반업무)등록-4 // 등록 후 schedule_no select작업 -->
<select id="selectScheduleno" resultType="com.fortune.Table_DTO.Schedule_DTO">
	select nvl(max(schedule_no)+1,1) as"schedule_no" from schedule
</select>




<!-- 모든 일정(일반업무) select -1 -->
<select id="selectSWList" resultType="com.fortune.function_DTO.Schedule_Work_DTO">
	SELECT S.SCHEDULE_NO, SCHEDULE_START, SCHEDULE_END, WORK_TITLE, WORK_TEXT FROM 
	SCHEDULE S JOIN WORK W 
	ON S.SCHEDULE_NO = W.SCHEDULE_NO 
	WHERE S.COLLABO_NO = #{collabo_no}
	ORDER BY SCHEDULE_START
</select>
<!-- 일정마다 참가자 select -2 -->
<select id="selectWUList" resultType="com.fortune.Table_DTO.Work_Users_DTO">
	select user_id, wu.schedule_no from
	work_users wu join work w
	on wu.SCHEDULE_NO = w.SCHEDULE_NO
	join schedule s
	on w.schedule_no = s.schedule_no
	where s.collabo_no = #{collabo_no}
</select>




<!-- 선택한 일정 select -->
<select id="selectClick" resultType="com.fortune.function_DTO.Schedule_Work_DTO">
	SELECT S.SCHEDULE_NO, SCHEDULE_START, SCHEDULE_END, WORK_TITLE, WORK_TEXT FROM 
	SCHEDULE S JOIN WORK W 
	ON S.SCHEDULE_NO = W.SCHEDULE_NO 
	WHERE S.COLLABO_NO = 1 AND S.SCHEDULE_NO = #{id}
</select>




<!-- 일정 delete 작업 -1 -->
<delete id="deleteWork">
	delete from work where schedule_no = #{id}
</delete>
<!-- 일정 delete 작업 -2 -->
<delete id="deleteSchedule">
	delete from schedule where schedule_no = #{id}
</delete>
<!-- 일정 delete 작업 -3 -->
<delete id="deleteWork_Users">
	delete from work_users where schedule_no =#{id}
</delete>
<!-- 일정 delete 작업 -4 -->
<delete id="deleteWork_Comment">
	delete from work_comment where schedule_no =#{id}
</delete>





<!-- 일정 update -->
<update id="updateWork">
	UPDATE WORK SET WORK_TITLE = #{work_title}, WORK_TEXT = #{work_text}
	WHERE SCHEDULE_NO = #{schedule_no}
</update>




<!-- 일정 dragupdate -->
<update id="updateSchedule">
	UPDATE schedule SET schedule_start = #{schedule_start}, schedule_end = #{schedule_end}
	WHERE SCHEDULE_NO = #{schedule_no}
</update>




<!-- 일정 상세보기의 comment select하기 -->
<select id="selectComment" resultType="com.fortune.Table_DTO.Work_Comment_DTO">
	select * from work_comment where schedule_no = #{id} order by work_comment_date desc
</select>





<!-- comment insert하기 -1 -->
<insert id="insertComment">
	insert into work_comment(work_comment_no , user_id , work_comment_text , work_comment_date , schedule_no)
	values((select nvl(max(work_comment_no +1),1) from work_comment), #{user_id}, #{work_comment_text}, sysdate, #{schedule_no})
</insert>
<!-- comment insert하기 -2 (insert 후 1건 select) -->
<select id="selectComment1" resultType="com.fortune.Table_DTO.Work_Comment_DTO">
	select * from work_comment where work_comment_no = (select max(work_comment_no) from work_comment)
</select>





<delete id="deleteComment">
	delete from work_comment where work_comment_no = #{work_comment_no}
</delete>




</mapper>